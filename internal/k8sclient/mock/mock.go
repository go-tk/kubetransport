// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-tk/kubetransport/internal/k8sclient (interfaces: K8sClient)

// Package mock_k8sclient is a generated GoMock package.
package mock_k8sclient

import (
	context "context"
	reflect "reflect"

	k8sclient "github.com/go-tk/kubetransport/internal/k8sclient"
	gomock "github.com/golang/mock/gomock"
)

// MockK8sClient is a mock of K8sClient interface.
type MockK8sClient struct {
	ctrl     *gomock.Controller
	recorder *MockK8sClientMockRecorder
}

// MockK8sClientMockRecorder is the mock recorder for MockK8sClient.
type MockK8sClientMockRecorder struct {
	mock *MockK8sClient
}

// NewMockK8sClient creates a new mock instance.
func NewMockK8sClient(ctrl *gomock.Controller) *MockK8sClient {
	mock := &MockK8sClient{ctrl: ctrl}
	mock.recorder = &MockK8sClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sClient) EXPECT() *MockK8sClientMockRecorder {
	return m.recorder
}

// GetEndpoints mocks base method.
func (m *MockK8sClient) GetEndpoints(arg0 context.Context, arg1, arg2 string) (*k8sclient.Endpoints, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEndpoints", arg0, arg1, arg2)
	ret0, _ := ret[0].(*k8sclient.Endpoints)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpoints indicates an expected call of GetEndpoints.
func (mr *MockK8sClientMockRecorder) GetEndpoints(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpoints", reflect.TypeOf((*MockK8sClient)(nil).GetEndpoints), arg0, arg1, arg2)
}

// Namespace mocks base method.
func (m *MockK8sClient) Namespace() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Namespace")
	ret0, _ := ret[0].(string)
	return ret0
}

// Namespace indicates an expected call of Namespace.
func (mr *MockK8sClientMockRecorder) Namespace() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Namespace", reflect.TypeOf((*MockK8sClient)(nil).Namespace))
}

// WatchEndpoints mocks base method.
func (m *MockK8sClient) WatchEndpoints(arg0 context.Context, arg1, arg2, arg3 string, arg4 k8sclient.WatchEndpointsCallback) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchEndpoints", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// WatchEndpoints indicates an expected call of WatchEndpoints.
func (mr *MockK8sClientMockRecorder) WatchEndpoints(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchEndpoints", reflect.TypeOf((*MockK8sClient)(nil).WatchEndpoints), arg0, arg1, arg2, arg3, arg4)
}
